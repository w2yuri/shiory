<div class="container">
  <div class="row">
    <div class="col-sm-12 col-md-8 col-lg-5 px-5 px-sm-0 mx-auto mt-5">
       <section class="section">
              <!--モーダル-->
              <button type="button" class="modal-btn" data-toggle="modal" data-target="#calendar-description_2">
                投稿フォームについて
              </button>
              <!-- モーダル内 -->
              <div class="modal fade" id="calendar-description_2" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="exampleModalCenterTitle">投稿フォームについて</h5>
                      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                      </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                           <div>
                                <%= image_tag 'post_explanation.png', class: 'img-fluid', style: 'max-width: 60%; display: block; margin: 0 auto;' %>
                            </div>
                            <div>
                               <p class="box__txt">
                                 ①ここで入力した内容が、投稿一覧ページに表示されます。<br>
                                　写真をアップロードしない場合は、NO IMAGEの代替写真が挿入されます。
                               </p>
                               <p class="box__txt">
                                 ②カレンダーに登録する日を選択します。<br>
                                 　未選択の場合、投稿はできますがカレンダーには登録されません。<br>
                                 　投稿編集で、登録日の削除や変更ができます。
                               </p>
                               <p class="box__txt">
                                 ③①と同様に入力します。
                               </p>
                               <p class="box__txt">
                                 ④③の入力フォームを消去することができます。
                               </p>
                               <p class="box__txt">
                                 ⑤「しおりを追加」で、③の入力フォームを追加できます。<br>
                                　 ⑥の公開範囲を選択した後、「投稿」ボタンを押下して投稿や下書き保存されます。
                               </p>
                               <p class="box__txt">
                                 ⑥公開範囲を選択します。<br>
                                 　投稿した後に下書きに戻したり、下書きから投稿に切り替えることもできます。
                               </p>
                            </div>
                        </div>
                    </div>
                  </div>
                </div>
              </div>
            </section>
            
      <%= form_with model: @post, url: posts_path, local: true do |f| %>
        <% if @post.errors.any? %>
          <ul>
            <% @post.errors.full_messages.each do |message| %>
              <li class="error-message"><%= message %></li>
            <% end %>
          </ul>
        <% end %>
        <div class="form-group">
          <div class="custom-file">
            <!--custom-file-input:このファイルアップロードフィールドにカスタムスタイルを適用。-->
            <!--onchange: fileOnChange(this):ユーザーがファイルを選択すると呼び出されるJavaScript関数(今回はfileOnChange)を指定。-->
            <!--JavaScriptのthisキーワードは、この関数が呼び出された要素自体を参照。-->
            <%= f.file_field :post_image, class: 'custom-file-input', onchange: 'fileOnChange(this)' %>
            <%= f.label :post_image, 'Picture', class: 'custom-file-label' %>
          </div>
        </div>
        <div class="form-group">
          <%= f.label :title, 'Title' %>
          <%= f.text_field :title, class: 'form-control', placeholder:"メインタイトルを記入" %>
        </div>
        <div class="form-group">
          <%= f.label :contents, 'Contents' %>
          <%= f.text_area :contents, class: 'form-control', placeholder:'詳細を記入' %>
        </div>
        <div class="form-group">
          <%= f.label :date, 'Date' %>
          <P> ( 行った日、行きたい日を選択するとカレンダーに反映されます )</P>
          <%= f.date_field :date, class: 'form-control' %>
        </div>
        <div id="travel_tasks">
          <%= f.fields_for :travel_tasks do |task| %>
            <%= render 'travel_task_fields', f: task %>
          <% end %>
        </div>
        <div class="text-center mt-2 mb-5 mr-2">
          <%= link_to_add_association 'しおりを追加',
              f,
              :travel_tasks,
              class: "btn btn-outline-secondary",
              data: {
                # リンクがクリックされると新しいフィールドがtravel_tasksに挿入
                association_insertion_node: '#travel_tasks',
                # フィールドの挿入方法を指定
                # appendは、新しいフィールドが既存のフィールドの後ろに挿入される
                association_insertion_method: 'append'
              }
          %>
          <input type="submit" name="commit" value="投稿" class="btn btn-success" data-disable-with="投稿中です">
          <div class="form-group row mt-3">
            <%= f.label :status, "公開範囲", class: "col-sm-4 ml-5", style: "color: #dbac9e;" %>
            <div style="padding-right:20px;">
            <%= f.radio_button :status, true %>
            <%= f.label :status, "投稿", {value: :true, style: "display: inline-block;"} %></div>
            <div style="padding-right:20px;">
            <%= f.radio_button :status, false %>
            <%= f.label :status, "下書き保存", {value: :true, style: "display: inline-block;"} %></div>
          </div>
         </div>
      <% end %>
    </div>
  </div>
</div>


<script>
  // fileOnChange関数を定義。引数としてelement(ファイルアップロードフィールド（<input type="file">）のDOM要素)受取
  function fileOnChange(element) {
      // $(element)を使用しファイルアップロードフィールドの値を取得。
      // .val()メソッドは、ファイルパスを取得。
      // 取得したファイルパスをバックスラッシュ（\）で分割し、配列するとファイル名だけを取得。
      var fileName = $(element).val().split('\\');
      // $(element)を使用しファイルアップロードフィールドの次の要素を取得。
      // .next('.custom-file-label')は、指定されたクラスを持つ次の要素を取得。
      // .html()メソッドを使用し、取得したラベル要素のHTML内容を変更。
      // fileName.pop()は、ファイルパスから取得したファイル名を取り出しラベルにファイル名が表示される。
      $(element).next('.custom-file-label').html(fileName.pop());
  };
</script>