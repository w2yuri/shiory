<div class="container">
  <div class="row">
    <div class="col-sm-12 col-md-8 col-lg-5 px-5 px-sm-0 mx-auto mt-5">
      <%= form_with model: @post, url: posts_path, local: true do |f| %>
        <% if @post.errors.any? %>
          <ul>
            <% @post.errors.full_messages.each do |message| %>
              <li class="error-message"><%= message %></li>
            <% end %>
          </ul>
        <% end %>
        <div class="form-group">
          <div class="custom-file">
            <!--custom-file-input:このファイルアップロードフィールドにカスタムスタイルを適用。-->
            <!--onchange: fileOnChange(this):ユーザーがファイルを選択すると呼び出されるJavaScript関数(今回はfileOnChange)を指定。-->
            <!--JavaScriptのthisキーワードは、この関数が呼び出された要素自体を参照。-->
            <%= f.file_field :post_image, class: 'custom-file-input', onchange: 'fileOnChange(this)' %>
            <%= f.label :post_image, 'Picture', class: 'custom-file-label' %>
          </div>
        </div>
        <div class="form-group">
          <%= f.label :title, 'Title' %>
          <%= f.text_field :title, class: 'form-control' %>
        </div>
        <div class="form-group">
          <%= f.label :contents, 'Shiory' %>
          <%= f.text_area :contents, class: 'form-control' %>
        </div>
        <div id="travel_tasks">
          <%= f.fields_for :travel_tasks do |task| %>
            <%= render 'travel_task_fields', f: task %>
          <% end %>
        </div>
        <div class="form-group">
        <%= link_to_add_association 'しおりを追加',
            f,
            :travel_tasks,
            class: "btn btn-outline-secondary",
            data: {
              # リンクがクリックされると新しいフィールドがtravel_tasksに挿入
              association_insertion_node: '#travel_tasks',
              # フィールドの挿入方法を指定
              # appendは、新しいフィールドが既存のフィールドの後ろに挿入される
              association_insertion_method: 'append'
            }
        %>
        </div>
        <input type="submit" name="commit" value="投稿" class="btn btn-success" data-disable-with="投稿中です">
        <div class="form-group row">
          <%=f.label:"公開範囲",class:"col-sm-4"%>
          <div style="padding-right:20px;">
          <%= f.radio_button :status, true %>
          <%= f.label :status, "投稿", {value: :true, style: "display: inline-block;"} %></div>
          <div style="padding-right:20px;">
          <%= f.radio_button :status, false %>
          <%= f.label :status, "下書き保存", {value: :true, style: "display: inline-block;"} %></div>
        </div>
      <% end %>
    </div>
  </div>
</div>



<script>
  // fileOnChange関数を定義。引数としてelement(ファイルアップロードフィールド（<input type="file">）のDOM要素)受取
  function fileOnChange(element) {
      // $(element)を使用しファイルアップロードフィールドの値を取得。
      // .val()メソッドは、ファイルパスを取得。
      // 取得したファイルパスをバックスラッシュ（\）で分割し、配列するとファイル名だけを取得。
      var fileName = $(element).val().split('\\');
      // $(element)を使用しファイルアップロードフィールドの次の要素を取得。
      // .next('.custom-file-label')は、指定されたクラスを持つ次の要素を取得。
      // .html()メソッドを使用し、取得したラベル要素のHTML内容を変更。
      // fileName.pop()は、ファイルパスから取得したファイル名を取り出しラベルにファイル名が表示される。
      $(element).next('.custom-file-label').html(fileName.pop());
  };
</script>