<div class='container'>
  <div class='row'>
    <div class="col-sm-12 col-md-8 col-lg-5 px-5 px-sm-0 mx-auto mt-5">
      <h3 class="text-center mb-3">投稿編集</h3>
      <!--posts/newと同様の記述-->
      <%= form_with model: @post, url: posts_path, local: true do |f| %>
      <% if @post.errors.any? %>
          <ul>
            <% @post.errors.full_messages.each do |message| %>
              <li class="error-message"><%= message %></li>
            <% end %>
          </ul>
        <% end %>
        <div class="form-group">
          <div class="custom-file">
            <%= f.file_field :post_image, class: 'custom-file-input', onchange: 'fileOnChange(this)' %>
            <%= f.label :post_image, 'Picture', class: 'custom-file-label' %>
          </div>
        </div>
        <div class="form-group">
          <%= f.label :title, 'Title' %>
          <%= f.text_field :title, class: 'form-control' %>
        </div>
        <div class="form-group">
          <%= f.label :contents, 'Contents' %>
          <%= f.text_area :contents, class: 'form-control' %>
        </div>
        <div class="form-group">
          <%= f.label :date, 'Date' %>
          <%= f.date_field :date, class: 'form-control' %>
        </div>
        <div id="travel_tasks">
          <%= f.fields_for :travel_tasks do |task| %>
            <%= render 'public/posts/travel_task_fields', f: task %>
          <% end %>
        </div>

        <div class="text-center mt-2 mb-5 mr-2">
          <%= link_to_add_association 'しおりを追加',
              f,
              :travel_tasks,
              class: "btn btn-outline-secondary",
              data: {
                # リンクがクリックされると新しいフィールドがtravel_tasksに挿入
                association_insertion_node: '#travel_tasks',
                # フィールドの挿入方法を指定
                # appendは、新しいフィールドが既存のフィールドの後ろに挿入される
                association_insertion_method: 'append'
              }
          %>
          <input type="submit" name="commit" value="更新" class="btn btn-success" data-disable-with="更新中です">
          <div class="form-group row mt-3">
            <%= f.label :status, "公開範囲", class: "col-sm-4 ml-5", style: "color: #dbac9e;" %>
            <div style="padding-right:20px;">
            <%= f.radio_button :status, true %>
            <%= f.label :status, "投稿", {value: :true, style: "display: inline-block;"} %></div>
            <div style="padding-right:20px;">
            <%= f.radio_button :status, false %>
            <%= f.label :status, "下書き保存", {value: :true, style: "display: inline-block;"} %></div>
          </div>
         </div>
      <% end %>
    </div>
  </div>
</div>

<script>
  // fileOnChange関数を定義。引数としてelement(ファイルアップロードフィールド（<input type="file">）のDOM要素)受取
  function fileOnChange(element) {
      // $(element)を使用しファイルアップロードフィールドの値を取得。
      // .val()メソッドは、ファイルパスを取得。
      // 取得したファイルパスをバックスラッシュ（\）で分割し、配列するとファイル名だけを取得。
      var fileName = $(element).val().split('\\');
      // $(element)を使用しファイルアップロードフィールドの次の要素を取得。
      // .next('.custom-file-label')は、指定されたクラスを持つ次の要素を取得。
      // .html()メソッドを使用し、取得したラベル要素のHTML内容を変更。
      // fileName.pop()は、ファイルパスから取得したファイル名を取り出しラベルにファイル名が表示される。
      $(element).next('.custom-file-label').html(fileName.pop());
  };
</script>